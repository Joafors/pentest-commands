\033[0;34m##################################################################\033[0m
\033[1;35m=== User enumeration (Windows) ===\033[0m
\033[0;31m- Privileges of current user -\033[0m
whoami /priv

\033[0;31m- Groups of current user -\033[0m
whoami /groups

\033[0;31m- User,group,and privileges of current user -\033[0m
whoami /all

\033[0;31m- Users on machine -\033[0m
net users

\033[0;31m- Info about specific user -\033[0m
net user <user>

\033[0;31m- Echo user -\033[0m
whoami

\033[0;31m- Echo hostname -\033[0m
hostname

\033[0;31m- Groupmembers, alias, and group comment -\033[0m 
net localgroup <GROUPNAME>

\033[0;34m##################################################################\033[0m
\033[1;35m=== System enumeration (Windows) ===\033[0m
\033[0;31m- information about the system -\033[0m
systeminfo

\033[0;31m- List hotfixes -\033[0m
wmic qfe get Caption,Description,HotFixID,Installation

\033[0;31m- List drives -\033[0m
wmic logicaldisk get Caption,Description,ProviderName

\033[0;31m- Search for installed programs (Powershell) -\033[0m
Get-ChildItem -Path "C:\Program Files (x86)" -Recurse

Get-ChildItem -Path "C:\Program Files" -Recurse

\033[0;31m- Search for dirs/files with 'Modify' rights (Powershell) -\033[0m
$User = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name

Get-ChildItem -Path "C:\" -Recurse \033[5;31m< -Directory OR -File >\033[0m | ForEach-Object {
    $Acl = Get-Acl $_.FullName
    foreach ($Access in $Acl.Access) {
        if ($Access.IdentityReference -eq $User -and ($Access.FileSystemRights -match "Modify" -or $Access.FileSystemRights -match "Write") -and $Access.IsInherited -eq $false) {
            $_.FullName
            break
        }
    }
} 

\033[0;31m- Query all services running on the machine -\033[0m
sc queryex type= service

\033[0;34m##################################################################\033[0m
\033[1;35m=== Password hunting (Windows) ===\033[0m
\033[0;31m- Find passwords with filtering & wildstar -\033[0m
findstr /si password *.txt *.ini *.config <*...>

\033[0;34m##################################################################\033[0m
\033[1;35m=== Query windows registry keys (Windows) ===\033[0m
\033[0;31m- Example software (TightVNC) -\033[0m
reg query HKCU\SOFTWARE\ORL\WINVC3
\033[0;37m...encoded password...\033[0;31m(can be cracked with vncpasswd.py)\033[0m

\033[0;34m##################################################################\033[0m
\033[1;35m=== Windows Defender (Windows) ===\033[0m
\033[0;31m- Turn off windows defender -\033[0m
Set-MpPreference -DisableRealtimeMonitoring $true

\033[0;31m- Query windows defender-\033[0m
sc query windefend

\033[0;34m##################################################################\033[0m
\033[1;35m=== Windows Firewall (Windows) ===\033[0m
\033[0;31m- Show state of firewall -\033[0m
netsh firewall show state

\033[0;31m- Dump firewall rules -\033[0m
netsh advfirewall firewall dump

\033[0;34m##################################################################\033[0m
\033[1;35m=== Windows Remoting (Windows) ===\033[0m
\033[0;31m- Turn on PSRemoting -\033[0m
Enable-PSRemoting -Force -SkipNetworkProfileCheck

\033[0;34m##################################################################\033[0m
\033[1;35m=== Network enumeration (Windows) ===\033[0m
\033[0;31m- Basic IP configurations -\033[0m
ipconfig

\033[0;31m- Detailed IP configurations -\033[0m
ipconfig /all

\033[0;31m- Arptable (all) -\033[0m
arp -a

\033[0;31m- Routing table -\033[0m
route print

\033[0;31m- Established connections & Listening ports -\033[0m
netstat -ano
\033[0;34m##################################################################\033[0m
\n
